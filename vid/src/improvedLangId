#!/usr/bin/env python
import sys
import optparse
from collections import defaultdict
import random

optparser = optparse.OptionParser()
optparser.add_option("-t", "--train", dest="train", default="../data/train/", help="Data filename prefix (default=data)")
optparser.add_option("-s", "--suffix", dest="suffix", default="_train", help="Data filename suffix (default=_train")
optparser.add_option("-i", "--input", dest="input", default="../data/dev/dev_set", help="Name of input file (default=data/dev/dev_set")

(opts, _) = optparser.parse_args()
lang = ['eng', 'fra', 'deu', 'ita', 'spa']
suffix = opts.suffix
train_dir = opts.train
input_file = opts.input

# Train data
dicts = []

#Train data
for i in xrange(len(lang)):
  langDict = defaultdict(int)
  for line in open(train_dir + lang[i] + suffix):
    for j in range(len(line) - 2):
      #increment trigram counts
      trigram = line[j:j+3]
      langDict[trigram] += 1
  dicts.append(langDict)



# Classify language
for line in open(input_file):
  samples = []
  for d in dicts:
    lineTrigrams = defaultdict(int)
    #find trigrams
    for i in xrange(len(line) - 2):
      lineTrigrams[line[i:i+3]] += 1

    dotProd = 0
    for key in set(lineTrigrams.keys()) or set(d.keys()):
      dotProd += lineTrigrams[key] * d[key]

    dotProd /= float(len(lineTrigrams) * len(d))
    samples.append(dotProd)
  max_index = samples.index(max(samples))
  print lang[max_index]




